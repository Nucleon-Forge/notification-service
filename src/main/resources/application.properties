spring.application.name=notification-service
server.port=8083
spring.config.import=optional:configserver:http://localhost:8888

management.endpoints.web.exposure.include=*

### App Configuration ###
ft.events.new-features=new_features
ft.events.updated-features=updated_features
ft.events.deleted-features=deleted_features

######## Kafka Configuration  #########
KAFKA_BROKER=localhost:9092
spring.kafka.bootstrap-servers=${KAFKA_BROKER}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=latest
#spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.properties.spring.json.add.type.headers=true
spring.kafka.consumer.properties.spring.json.trusted.packages=*
